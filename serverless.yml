service: rstreams-example

frameworkVersion: '3'
useDotenv: true

plugins:
  - serverless-leo
  - serverless-webpack

package:
  individually: true
#  artifact: ${opt:artifact, ""}

custom:
  convention:
    functions:
      folders:
        - api
        - bots
      pattern:
        - '*.yml'
        - '*.yaml'
    resources:
      folders:
        - cloudformation
      pattern:
        - '*.yml'
        - '*.yaml'
        - '*.js'
        - '*.json'
        - '*.ts'
  included: ${file(./node_modules/serverless-convention/index.js)}
  
  leoStack: ${RStreamsBus}
  dev:
    # leoStack: ${RStreamsBus}
    stackParameters:
      - ParameterKey: RStreamsBus
        ParameterValue: ClintTestBus-Bus-1AU1ENWIRG4NO
  test:
    # stackParameters:
  staging:
    # stackParameters:
  prod:
    # stackParameters:
  us-east-1:
    deploymentBucket: leo-cli-publishbucket-19e80lsbylz0f
  us-west-2:
    deploymentBucket: leo-cli-publishbucket-13ickrmrh6vyd
  no-region:
    deploymentBucket: leo-cli-publishbucket-13ickrmrh6vyd

provider:
  name: aws
  runtime: nodejs14.x
  versionFunctions: false
  deploymentBucket: ${self:custom.${opt:region, 'no-region'}.deploymentBucket}
  stage: ${opt:stage, 'dev'}
  
  environment:
    RSTREAMS_CONFIG_SECRET: 
      Fn::Sub: rstreams-${RStreamsBus}

  stackParameters: ${self:custom.${self:provider.stage}.stackParameters}

functions:
  - ${self:custom.included.functions} # Auto-include functions using serverless-convention

resources:
  - ${self:custom.included.resources} # Auto-include resources using serverless-convention

